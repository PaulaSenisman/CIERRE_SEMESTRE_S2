#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Se observa como se generan los números aleatorios.
sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Ejercicio 1:
length(ejemplos[["positivo"]])
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
set.seed(10)
ejemp = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
print(paste("positivo"))
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
length(paula)
print(paste("3"))
print(paste(" 3 "))
print(paste("3"))
---------------------------
#Ejercicio 1:
ls.str(3)
---------------------
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
length(paula)
---------------------------
#Ejercicio 1:
ls(pat="3")
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
---------------------------
#Ejercicio 1:
ls(pat="p")
---------------------
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
length(paula)
---------------------
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
---------------------
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
---------------------
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
---------------------
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
length(paula)
---------------------
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
paula = sample(c("3", "2", "1"), 5, replace = TRUE)
length(paula)
#Ejercicio 1:
table(paula)
#Ejercicio 1:
table(ejemplos)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
table(ejemplos)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
table(ejemplos)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
table(ejemplos)
> ##ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)##
##ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)##
##ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)##
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
set.seed(ejemplos)
#Ejercicio 2:
set.seed(10)
set.seed(ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE))
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(5)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(5)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(5)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(5)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(66)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(66)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(0)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(0)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(0)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(2)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(2)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(2)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(3)
#Ejercicio 2:
set.seed(3)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(3)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(11)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(11)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(12)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(12)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(13)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(13)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
set.seed(66)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#Ejercicio 2:
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
set.seed(66)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo.
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 4:
#Se contruye un script que calcule la probabilidad del conjunto de cartas que esta por salir con el fin de crear datos de prueba, utilizando la función sample considerando que han salido 31 cartas.
cartas=sample(c("altas","medianas","bajas"),21,replace=TRUE)
table(cartas)
length(cartas)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(1)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 3:
#Se evalua el impacto si se considera o no los neutros que posee a través de la función set.seed
set.seed(66)
ejemplos = sample(c("positivo","negativo","neutros"), 66, replace = TRUE)
#Ejercicio 3:
#Se evalua el impacto si se considera o no los neutros que posee a través de la función set.seed
set.seed(66)
ejemplos = sample(c("positivo","negativo","neutros"), 66, replace = TRUE)
table(ejemplos)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 3:
#Se evalua el impacto si se considera o no los neutros que posee a través de la función set.seed
set.seed(66)
ejemplos = sample(c("positivo","negativo","neutros"), 66, replace = TRUE)
table(ejemplos)
#Ejercicio 4:
#Se contruye un script que calcule la probabilidad del conjunto de cartas que esta por salir con el fin de crear datos de prueba, utilizando la función sample considerando que han salido 31 cartas.
cartas=sample(c("cartas altas","cartas medianas","cartas bajas"),21,replace=TRUE)
#Ejercicio 4:
#Se contruye un script que calcule la probabilidad del conjunto de cartas que esta por salir con el fin de crear datos de prueba, utilizando la función sample considerando que han salido 31 cartas.
cartas=sample(c("cartas altas","cartas medianas","cartas bajas"),21,replace=TRUE)
table(cartas)
length(cartas)
prob<-function(valor,total){
valor/total
}
prob(10,length(cartas))
#Ejercicio 5
#Se utiliza la función set.seed con el fin de determinar que grupo de cartas tiene más probabilidades de salir.
set.seed(21)
cartas=sample(c("cartas altas","cartas medianas","cartas bajas"),21,replace=TRUE)
table(cartas)
Prob(10,21)
Prob<-function(valor,total){
valor/total
}
Prob(10,21)
#línea de comando para crear elementos aleatorios en R.
ejemplos = sample(c("positivo", "negativo", "neutros"), 100, replace = TRUE)
#Se utiliza lenght para determinar la dimensión del vector corroborando que existan 100 elementos en la lista de la variable.
length(ejemplos)
#Ejercicio 1:
#Se utiliza el comando table con el fin de realizar una tabulación de datos con su frecuencia asociada a los elementos aleatorios generados.
table(ejemplos)
#Ejercicio 2:
#Se experimenta ejecutando set.seed(), previo a la creación de elementos aleatorios, sin ejecutarlo; Posteriormente se ejecuta para observar su impacto.
set.seed(10)
ejemplos = sample(c("positivo","negativo","neutros"), 10, replace = TRUE)
table(ejemplos)
#Ejercicio 3:
#Se evalua el impacto si se considera o no los neutros que posee a través de la función set.seed
set.seed(66)
ejemplos = sample(c("positivo","negativo","neutros"), 66, replace = TRUE)
table(ejemplos)
#Ejercicio 4:
#Se contruye un script que calcule la probabilidad del conjunto de cartas que esta por salir con el fin de crear datos de prueba, utilizando la función sample considerando que han salido 31 cartas.
cartas=sample(c("cartas altas","cartas medianas","cartas bajas"),21,replace=TRUE)
table(cartas)
length(cartas)
Prob<-function(valor,total){
valor/total
}
Prob(10,length(cartas))
#Ejercicio 5
#Se utiliza la función set.seed con el fin de determinar que grupo de cartas tiene más probabilidades de salir.
set.seed(21)
cartas=sample(c("cartas altas","cartas medianas","cartas bajas"),21,replace=TRUE)
table(cartas)
Prob(10,21)
